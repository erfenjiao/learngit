int calPoints(char ** ops, int opsSize){
    if(opsSize<0)
        return 0;
    int stack[opsSize];
    int top=-1;
    int sum=0;
    for(int i=0;i<opsSize;i++)
    {
        switch(ops[i][0])
        {
            case '+'://获取前两轮的和
                stack[++top]=stack[top-1]+stack[top];
                sum+=stack[top];
            break;
            case 'D':
                stack[++top]=stack[top]*2;
                sum+=stack[top];
            break;
            case 'C':
                sum-=stack[top--];
            break;
            default :
                stack[++top]=atoi(ops[i]);
                sum+=stack[top];
        }
    }
    return sum;
}
